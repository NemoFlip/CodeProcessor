services:
  homework1:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
  code_service:
    build:
      context: .
      dockerfile: code_service/Dockerfile
    ports:
      - 8001:8001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # allows to use docker-daemon inside a container - to call docker commands inside a container

  tests:
    build:
      context: .
      dockerfile: test/Dockerfile
    depends_on:
      homework1:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
  postgres:
    container_name: postgres_container
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: maindb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  migrate:
    image: migrate/migrate:v4.15.2
    command: -path=/migrations -database postgresql://postgres:postgres@postgres:5432/maindb?sslmode=disable up
    volumes:
      - ./internal/database/migration:/migrations # for access to host files
    depends_on:
      postgres:
        condition: service_healthy
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 10s
      retries: 5